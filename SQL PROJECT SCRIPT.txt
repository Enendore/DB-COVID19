schema PROGETTO (class Schema) :(
create table TABELLA_MASTER
(
	DATA DATE,
	CODICE_REGIONE NUMBER,
	NOME_REGIONE VARCHAR2(50),
	CODICE_PROVINCIA NUMBER,
	NOME_PROVINCIA VARCHAR2(50),
	SIGLA_PROVINCIA VARCHAR2(5),
	LATITUDINE VARCHAR2(50),
	LONGITUDINE VARCHAR2(50),
	TOT_CASI NUMBER
)
/

create table REGIONI
(
	ID_REGIONE NUMBER not null
		constraint REGIONI_PK
			primary key,
	RESIDENTI NUMBER,
	NOME_REGIONE VARCHAR2(50),
	INQUINAMENTO_ARIA NUMBER
)
/

create table SPOSTAMENTI
(
	DATA DATE not null,
	CODICE_REGIONE NUMBER not null
		constraint SPOSTAMENTI___FK
			references REGIONI,
	LUOGHI_LAVORO NUMBER,
	LUOGHI_RESIDENZIALI NUMBER,
	TRASPORTO_PUBBLICO NUMBER,
	ALIMENTARI_FARMACIE NUMBER,
	VENDITA_E_ATTIVITA_RICREATIVE NUMBER,
	constraint SPOSTAMENTI_PK
		primary key (DATA, CODICE_REGIONE)
)
/

create table CASI_REGIONI
(
	DATA DATE not null,
	CODICE_REGIONE NUMBER not null
		constraint CASI_REGIONI__FK
			references REGIONI,
	RICOVERATI_CON_SINTOMI NUMBER,
	TERAPIA_INTENSIVA NUMBER,
	TOTALE_OSPEDALIZZATI NUMBER,
	ISOLAMENTO_DOMICILIARE NUMBER,
	DIMESSI_GUARITI NUMBER,
	DECEDUTI NUMBER,
	TAMPONI NUMBER,
	constraint CASI_REGIONI_PK
		primary key (DATA, CODICE_REGIONE)
)
/

create table PROVINCE
(
	ID_PROVINCIA NUMBER not null
		constraint PROVINCE_PK
			primary key,
	NOME_PROVINCIA VARCHAR2(50),
	COD_REGIONE NUMBER
		constraint PROVINCE_REGIONI_ID_REGIONE_FK
			references REGIONI
				on delete cascade,
	SIGLA_PROV VARCHAR2(50),
	LATITUDINE VARCHAR2(50),
	LONGITUDINE VARCHAR2(50),
	RESIDENTI NUMBER,
	PERC_OVER_65 NUMBER
)
/

create table CASI_PROVINCE
(
	DATA DATE not null,
	ID_PROV NUMBER not null
		constraint CASI_PROVINCE__FK
			references PROVINCE
				on delete cascade,
	TOT_CASI NUMBER,
	constraint CASI_PROVINCE_PK
		primary key (DATA, ID_PROV)
)
/

create materialized view GIORNO_PICCO_CONTAGI_PROVINCIA
	refresh force on demand
as
SELECT R.DATA, R.TOT_CASI, P.NOME_PROVINCIA
FROM CASI_PROVINCE R JOIN PROVINCE P on R.ID_PROV = P.ID_PROVINCIA
WHERE R.TOT_CASI IN (
SELECT MAX(RE.TOT_CASI)
FROM CASI_PROVINCE RE
WHERE RE.ID_PROV=R.ID_PROV
)
/

create materialized view TOTALE_COSTANTE
	refresh force on demand
as
SELECT P.COD_REGIONE, P.NOME_PROVINCIA, SUM(C.TOT_CASI) AS CASI_TOTALI
FROM CASI_PROVINCE C JOIN PROVINCE P on C.ID_PROV = P.ID_PROVINCIA
GROUP BY NOME_PROVINCIA, COD_REGIONE
/

create materialized view PROVINCIA_PIU_CONTAGIATI_PER_REGIONE
	refresh force on demand
as
SELECT R.NOME_REGIONE, T.NOME_PROVINCIA, T.CASI_TOTALI
FROM REGIONI R JOIN TOTALE_COSTANTE T ON T.COD_REGIONE=R.ID_REGIONE
WHERE T.CASI_TOTALI IN (
SELECT MAX(TC.CASI_TOTALI)
FROM TOTALE_COSTANTE TC
WHERE TC.COD_REGIONE=R.ID_REGIONE
)
/

create materialized view MEDIA_SPOSTAMENTI_TOTALI_REGIONI
	refresh force on demand
as
SELECT R.NOME_REGIONE, ROUND(AVG(LUOGHI_LAVORO),2) AS MEDIA_LUOGHI_LAVORO, ROUND(AVG(LUOGHI_RESIDENZIALI),2) AS MEDIA_LUOGHI_RESIDENZIALI, ROUND(AVG(TRASPORTO_PUBBLICO),2) AS MEDIA_TRASPORTO_PUBBLICO,
ROUND(AVG(ALIMENTARI_FARMACIE),2) AS MEDIA_ALIMENTARI_FARMACIE, ROUND(AVG(VENDITA_E_ATTIVITA_RICREATIVE),2) AS MEDIA_VENDITA_E_RICREATIVE
FROM SPOSTAMENTI S JOIN REGIONI R ON S.CODICE_REGIONE=R.ID_REGIONE
GROUP BY R.NOME_REGIONE
/

create materialized view PRE_LOCKDOWN
	refresh force on demand
as
SELECT R.NOME_REGIONE, ROUND(AVG(LUOGHI_LAVORO),2) AS LAVORO, ROUND(AVG(LUOGHI_RESIDENZIALI),2) AS RESIDENZIALI,
       ROUND(AVG(TRASPORTO_PUBBLICO),2) AS TRASPORTI, ROUND(AVG(ALIMENTARI_FARMACIE),2) AS ALIMENTARI_E_FARMACIE,
       ROUND(AVG(VENDITA_E_ATTIVITA_RICREATIVE),2) AS VENDITA_E_RICREATIVE
FROM REGIONI R JOIN SPOSTAMENTI S ON CODICE_REGIONE=R.ID_REGIONE
WHERE DATA BETWEEN DATE'2020-02-25' AND DATE'2020-03-08'
GROUP BY R.NOME_REGIONE
/

create materialized view LOCKDOWN
	refresh force on demand
as
SELECT R.NOME_REGIONE, ROUND(AVG(LUOGHI_LAVORO),2) AS LAVORO, ROUND(AVG(LUOGHI_RESIDENZIALI),2) AS RESIDENZIALI,
       ROUND(AVG(TRASPORTO_PUBBLICO),2) AS TRASPORTI, ROUND(AVG(ALIMENTARI_FARMACIE),2) AS ALIMENTARI_E_FARMACIE,
       ROUND(AVG(VENDITA_E_ATTIVITA_RICREATIVE),2) AS VENDITA_E_RICREATIVE
FROM REGIONI R JOIN SPOSTAMENTI S ON CODICE_REGIONE=R.ID_REGIONE
WHERE DATA BETWEEN DATE'2020-03-09' AND DATE'2020-04-13'
GROUP BY R.NOME_REGIONE
/

create materialized view AFTER_LOCKDOWN
	refresh force on demand
as
SELECT R.NOME_REGIONE, ROUND(AVG(LUOGHI_LAVORO),2) AS LAVORO, ROUND(AVG(LUOGHI_RESIDENZIALI),2) AS RESIDENZIALI,
       ROUND(AVG(TRASPORTO_PUBBLICO),2) AS TRASPORTI, ROUND(AVG(ALIMENTARI_FARMACIE),2) AS ALIMENTARI_E_FARMACIE,
       ROUND(AVG(VENDITA_E_ATTIVITA_RICREATIVE),2) AS VENDITA_E_RICREATIVE
FROM REGIONI R JOIN SPOSTAMENTI S ON CODICE_REGIONE=R.ID_REGIONE
WHERE DATA BETWEEN DATE'2020-04-14' AND DATE'2020-05-03'
GROUP BY R.NOME_REGIONE
/

create materialized view CASI_E_INQUINAMENTO
	refresh force on demand
as
SELECT NOME_REGIONE, SUM(TOT_CASI) SommaCasiPerReg, INQUINAMENTO_ARIA
from REGIONI join PROVINCE P on REGIONI.ID_REGIONE = P.COD_REGIONE join CASI_PROVINCE CP on P.ID_PROVINCIA = CP.ID_PROV
group by NOME_REGIONE, INQUINAMENTO_ARIA
/

create materialized view POPONI
	refresh force on demand
as
SELECT "from$_subquery$_003"."DATA" "DATA","from$_subquery$_003"."CODICE_REGIONE" "CODICE_REGIONE","from$_subquery$_003"."RICOVERATI_CON_SINTOMI" "RICOVERATI_CON_SINTOMI","from$_subquery$_003"."TERAPIA_INTENSIVA" "TERAPIA_INTENSIVA","from$_subquery$_003"."TOTALE_OSPEDALIZZATI" "TOTALE_OSPEDALIZZATI","from$_subquery$_003"."ISOLAMENTO_DOMICILIARE" "ISOLAMENTO_DOMICILIARE","from$_subquery$_003"."DIMESSI_GUARITI" "DIMESSI_GUARITI","from$_subquery$_003"."DECEDUTI" "DECEDUTI","from$_subquery$_003"."TAMPONI" "TAMPONI","from$_subquery$_003"."LUOGHI_LAVORO" "LUOGHI_LAVORO","from$_subquery$_003"."LUOGHI_RESIDENZIALI" "LUOGHI_RESIDENZIALI","from$_subquery$_003"."TRASPORTO_PUBBLICO" "TRASPORTO_PUBBLICO","from$_subquery$_003"."ALIMENTARI_FARMACIE" "ALIMENTARI_FARMACIE","from$_subquery$_003"."VENDITA_E_ATTIVITA_RICREATIVE" "VENDITA_E_ATTIVITA_RICREATIVE" FROM  (SELECT "SPOSTAMENTI"."DATA" "DATA","SPOSTAMENTI"."CODICE_REGIONE" "CODICE_REGIONE","CASI_REGIONI"."RICOVERATI_CON_SINTOMI" "RICOVERATI_CON_SINTOMI","CASI_REGIONI"."TERAPIA_INTENSIVA" "TERAPIA_INTENSIVA","CASI_REGIONI"."TOTALE_OSPEDALIZZATI" "TOTALE_OSPEDALIZZATI","CASI_REGIONI"."ISOLAMENTO_DOMICILIARE" "ISOLAMENTO_DOMICILIARE","CASI_REGIONI"."DIMESSI_GUARITI" "DIMESSI_GUARITI","CASI_REGIONI"."DECEDUTI" "DECEDUTI","CASI_REGIONI"."TAMPONI" "TAMPONI","SPOSTAMENTI"."LUOGHI_LAVORO" "LUOGHI_LAVORO","SPOSTAMENTI"."LUOGHI_RESIDENZIALI" "LUOGHI_RESIDENZIALI","SPOSTAMENTI"."TRASPORTO_PUBBLICO" "TRASPORTO_PUBBLICO","SPOSTAMENTI"."ALIMENTARI_FARMACIE" "ALIMENTARI_FARMACIE","SPOSTAMENTI"."VENDITA_E_ATTIVITA_RICREATIVE" "VENDITA_E_ATTIVITA_RICREATIVE" FROM "CASI_REGIONI" "CASI_REGIONI","SPOSTAMENTI" "SPOSTAMENTI" WHERE "CASI_REGIONI"."CODICE_REGIONE"="SPOSTAMENTI"."CODICE_REGIONE" AND "CASI_REGIONI"."DATA"="SPOSTAMENTI"."DATA") "from$_subquery$_003"
/

create materialized view MEDIA_CONTAGIATI_PROVINCIA_MESE
	refresh force on demand
as
select *
from PROGETTO.MEDIA_DEC_FEB
natural join PROGETTO.MEDIA_DEC_MAR natural join PROGETTO.MEDIA_DEC_APR natural join PROGETTO.MEDIA_DEC_MAG
/

create materialized view MESE_PEGGIORE
	refresh force on demand
as
select*
from PROGETTO.MEDIA_CONTAGIATI_MESE_PROVINCIA
natural join(
select max(MEDIA_DECEDUTI_MESE) media_deceduti_mese, NOME_PROVINCIA
from PROGETTO.MEDIA_CONTAGIATI_MESE_PROVINCIA
group by NOME_PROVINCIA
order by  media_deceduti_mese desc)
/

create materialized view MEDIA_CONTAGIATI_MESE_PROVINCIA
	refresh force on demand
as
SELECT ROUND(AVG(TOT_CASI), 2) AS MEDIA_CONTAGIATI_MESE, EXTRACT(MONTH FROM DATA) AS MESE, NOME_PROVINCIA
FROM CASI_PROVINCE JOIN PROVINCE R on CASI_PROVINCE.ID_PROV = R. ID_PROVINCIA
GROUP BY NOME_PROVINCIA, EXTRACT(MONTH FROM DATA)
/

create materialized view MEDIA_CONT_FEB
	refresh force on demand
as
select NOME_PROVINCIA, MEDIA_CONTAGIATI_MESE as febbraio
from PROGETTO.MEDIA_CONTAGIATI_MESE_PROVINCIA
where MESE=2
/

create materialized view TOTALE_PER_REGIONE
	refresh force on demand
as
select sum(TOT_CASI) totale, NOME_REGIONE
from CASI_PROVINCE join PROVINCE on ID_PROV=ID_PROVINCIA join REGIONI R on PROVINCE.COD_REGIONE = R.ID_REGIONE
group by NOME_REGIONE
/

